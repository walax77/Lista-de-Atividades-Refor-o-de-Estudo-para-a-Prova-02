Por que a lista deve estar ordenada?

O Binary Search funciona corretamente apenas em uma lista ordenada porque ele depende da capacidade de dividir a lista em metades e determinar em qual metade o elemento procurado pode estar. Isso é possível porque a lista está ordenada, permitindo que o algoritmo descarte metade dos elementos em cada passo.

Exemplo 1: Lista Ordenada
Considerando a lista ordenada [1, 3, 5, 7, 9, 11, 13, 15, 17, 19] e a busca pelo elemento 7:

Dividimos a lista ao meio e obtemos o valor 9 (índice 4).

Como 7 < 9, descartamos a metade direita e continuamos com a metade esquerda [1, 3, 5, 7].

Dividimos novamente, obtendo 5 (índice 2).

Como 7 > 5, descartamos a metade esquerda e continuamos com a metade direita [7].

Encontramos 7 (índice 3).

Exemplo 2: Lista Não Ordenada
Considerando a lista não ordenada [3, 1, 7, 5, 9, 15, 13, 11, 19, 17] e a busca pelo elemento 7:

Dividimos a lista ao meio e obtemos o valor 15 (índice 5).

Como 7 < 15, descartamos a metade direita [13, 11, 19, 17] e continuamos com a metade esquerda [3, 1, 7, 5, 9].

Dividimos novamente, obtendo 7 (índice 2).

Isso pode parecer correto, mas apenas aconteceu por sorte. Se o número 7 estivesse na outra metade, seria descartado incorretamente.

Em uma lista não ordenada, não há garantia de que o elemento procurado estará na parte esperada, e o algoritmo pode não funcionar corretamente, levando a resultados incorretos ou ineficiência.